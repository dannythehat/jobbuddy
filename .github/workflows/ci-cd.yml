name: JobBuddy CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm ci
          cd ..
        fi
    
    - name: Install backend dependencies
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm ci
          cd ..
        fi
    
    - name: Lint frontend
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm run lint
          cd ..
        fi
    
    - name: Lint backend
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm run lint
          cd ..
        fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm ci
          cd ..
        fi
    
    - name: Install backend dependencies
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm ci
          cd ..
        fi
    
    - name: Test frontend
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm test
          cd ..
        fi
    
    - name: Test backend
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm test
          cd ..
        fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm ci
          cd ..
        fi
    
    - name: Install backend dependencies
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm ci
          cd ..
        fi
    
    - name: Build frontend
      run: |
        if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
          cd frontend
          npm run build
          cd ..
        fi
    
    - name: Build backend
      run: |
        if [ -d "backend" ] && [ -f "backend/package.json" ]; then
          cd backend
          npm run build
          cd ..
        fi
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build
        retention-days: 7
    
    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: backend/dist
        retention-days: 7

  # Deployment job to be configured later
  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - name: Download frontend build artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: frontend-build
  #       path: frontend/build
  #   
  #   - name: Download backend build artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: backend-build
  #       path: backend/dist
  #   
  #   - name: Deploy to production
  #     run: echo "Deployment steps will be added here"